
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAND ASIGNACION CADENA COMA DIF DIV ENTERO FOR ID IGUAL LBRACE LPAREN MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MOD MULT OR PUNTOYCOMA RBRACE REAL RPAREN TIPOprograma : programa sentencia\n| sentenciasentencia : declaracion\n| asignacion\n| ciclo_fordeclaracion : TIPO ID PUNTOYCOMAasignacion : ID ASIGNACION expresion PUNTOYCOMAasignacion_simple : ID ASIGNACION expresionciclo_for : FOR LPAREN asignacion condicion PUNTOYCOMA asignacion_simple RPAREN LBRACE cuerpo RBRACEcondicion : expresion_relexpresion_rel : expresion MAYOR expresion\n| expresion MENOR expresion\n| expresion MAYORIGUAL expresion\n| expresion MENORIGUAL expresion\n| expresion IGUAL expresion\n| expresion DIF expresionexpresion : expresion MAS expresion\n| expresion MENOS expresion\n| expresion MULT expresion\n| expresion DIV expresion\n| expresion MOD expresionexpresion : LPAREN expresion RPARENexpresion : IDexpresion : ENTERO\n| REALexpresion : CADENAcuerpo : cuerpo sentencia\n| sentencia\n| emptyempty :'
    
_lr_action_items = {'TIPO':([0,1,2,3,4,5,9,13,21,54,56,57,58,59,60,],[6,6,-2,-3,-4,-5,-1,-6,-7,6,6,-28,-29,-9,-27,]),'ID':([0,1,2,3,4,5,6,9,11,12,13,16,20,21,22,23,24,25,26,37,38,39,40,41,42,43,53,54,56,57,58,59,60,],[7,7,-2,-3,-4,-5,10,-1,14,7,-6,14,14,-7,14,14,14,14,14,45,14,14,14,14,14,14,14,7,7,-28,-29,-9,-27,]),'FOR':([0,1,2,3,4,5,9,13,21,54,56,57,58,59,60,],[8,8,-2,-3,-4,-5,-1,-6,-7,8,8,-28,-29,-9,-27,]),'$end':([1,2,3,4,5,9,13,21,59,],[0,-2,-3,-4,-5,-1,-6,-7,-9,]),'RBRACE':([3,4,5,13,21,54,56,57,58,59,60,],[-3,-4,-5,-6,-7,-30,59,-28,-29,-9,-27,]),'ASIGNACION':([7,45,],[11,53,]),'LPAREN':([8,11,16,20,21,22,23,24,25,26,38,39,40,41,42,43,53,],[12,16,16,16,-7,16,16,16,16,16,16,16,16,16,16,16,16,]),'PUNTOYCOMA':([10,14,15,17,18,19,28,29,31,32,33,34,35,36,46,47,48,49,50,51,],[13,-23,21,-24,-25,-26,37,-10,-17,-18,-19,-20,-21,-22,-11,-12,-13,-14,-15,-16,]),'ENTERO':([11,16,20,21,22,23,24,25,26,38,39,40,41,42,43,53,],[17,17,17,-7,17,17,17,17,17,17,17,17,17,17,17,17,]),'REAL':([11,16,20,21,22,23,24,25,26,38,39,40,41,42,43,53,],[18,18,18,-7,18,18,18,18,18,18,18,18,18,18,18,18,]),'CADENA':([11,16,20,21,22,23,24,25,26,38,39,40,41,42,43,53,],[19,19,19,-7,19,19,19,19,19,19,19,19,19,19,19,19,]),'MAS':([14,15,17,18,19,27,30,31,32,33,34,35,36,46,47,48,49,50,51,55,],[-23,22,-24,-25,-26,22,22,22,22,22,22,22,-22,22,22,22,22,22,22,22,]),'MENOS':([14,15,17,18,19,27,30,31,32,33,34,35,36,46,47,48,49,50,51,55,],[-23,23,-24,-25,-26,23,23,23,23,23,23,23,-22,23,23,23,23,23,23,23,]),'MULT':([14,15,17,18,19,27,30,31,32,33,34,35,36,46,47,48,49,50,51,55,],[-23,24,-24,-25,-26,24,24,24,24,24,24,24,-22,24,24,24,24,24,24,24,]),'DIV':([14,15,17,18,19,27,30,31,32,33,34,35,36,46,47,48,49,50,51,55,],[-23,25,-24,-25,-26,25,25,25,25,25,25,25,-22,25,25,25,25,25,25,25,]),'MOD':([14,15,17,18,19,27,30,31,32,33,34,35,36,46,47,48,49,50,51,55,],[-23,26,-24,-25,-26,26,26,26,26,26,26,26,-22,26,26,26,26,26,26,26,]),'RPAREN':([14,17,18,19,27,31,32,33,34,35,36,44,55,],[-23,-24,-25,-26,36,-17,-18,-19,-20,-21,-22,52,-8,]),'MAYOR':([14,17,18,19,30,31,32,33,34,35,36,],[-23,-24,-25,-26,38,-17,-18,-19,-20,-21,-22,]),'MENOR':([14,17,18,19,30,31,32,33,34,35,36,],[-23,-24,-25,-26,39,-17,-18,-19,-20,-21,-22,]),'MAYORIGUAL':([14,17,18,19,30,31,32,33,34,35,36,],[-23,-24,-25,-26,40,-17,-18,-19,-20,-21,-22,]),'MENORIGUAL':([14,17,18,19,30,31,32,33,34,35,36,],[-23,-24,-25,-26,41,-17,-18,-19,-20,-21,-22,]),'IGUAL':([14,17,18,19,30,31,32,33,34,35,36,],[-23,-24,-25,-26,42,-17,-18,-19,-20,-21,-22,]),'DIF':([14,17,18,19,30,31,32,33,34,35,36,],[-23,-24,-25,-26,43,-17,-18,-19,-20,-21,-22,]),'LBRACE':([52,],[54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencia':([0,1,54,56,],[2,9,57,60,]),'declaracion':([0,1,54,56,],[3,3,3,3,]),'asignacion':([0,1,12,54,56,],[4,4,20,4,4,]),'ciclo_for':([0,1,54,56,],[5,5,5,5,]),'expresion':([11,16,20,22,23,24,25,26,38,39,40,41,42,43,53,],[15,27,30,31,32,33,34,35,46,47,48,49,50,51,55,]),'condicion':([20,],[28,]),'expresion_rel':([20,],[29,]),'asignacion_simple':([37,],[44,]),'cuerpo':([54,],[56,]),'empty':([54,],[58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> programa sentencia','programa',2,'p_programa','parser.py',27),
  ('programa -> sentencia','programa',1,'p_programa','parser.py',28),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia','parser.py',32),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','parser.py',33),
  ('sentencia -> ciclo_for','sentencia',1,'p_sentencia','parser.py',34),
  ('declaracion -> TIPO ID PUNTOYCOMA','declaracion',3,'p_declaracion','parser.py',39),
  ('asignacion -> ID ASIGNACION expresion PUNTOYCOMA','asignacion',4,'p_asignacion','parser.py',49),
  ('asignacion_simple -> ID ASIGNACION expresion','asignacion_simple',3,'p_asignacion_simple','parser.py',61),
  ('ciclo_for -> FOR LPAREN asignacion condicion PUNTOYCOMA asignacion_simple RPAREN LBRACE cuerpo RBRACE','ciclo_for',10,'p_ciclo_for','parser.py',75),
  ('condicion -> expresion_rel','condicion',1,'p_condicion','parser.py',79),
  ('expresion_rel -> expresion MAYOR expresion','expresion_rel',3,'p_expresion_rel','parser.py',83),
  ('expresion_rel -> expresion MENOR expresion','expresion_rel',3,'p_expresion_rel','parser.py',84),
  ('expresion_rel -> expresion MAYORIGUAL expresion','expresion_rel',3,'p_expresion_rel','parser.py',85),
  ('expresion_rel -> expresion MENORIGUAL expresion','expresion_rel',3,'p_expresion_rel','parser.py',86),
  ('expresion_rel -> expresion IGUAL expresion','expresion_rel',3,'p_expresion_rel','parser.py',87),
  ('expresion_rel -> expresion DIF expresion','expresion_rel',3,'p_expresion_rel','parser.py',88),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','parser.py',92),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','parser.py',93),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_binaria','parser.py',94),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','parser.py',95),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binaria','parser.py',96),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_expresion_group','parser.py',106),
  ('expresion -> ID','expresion',1,'p_expresion_id','parser.py',110),
  ('expresion -> ENTERO','expresion',1,'p_expresion_num','parser.py',119),
  ('expresion -> REAL','expresion',1,'p_expresion_num','parser.py',120),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',124),
  ('cuerpo -> cuerpo sentencia','cuerpo',2,'p_cuerpo','parser.py',128),
  ('cuerpo -> sentencia','cuerpo',1,'p_cuerpo','parser.py',129),
  ('cuerpo -> empty','cuerpo',1,'p_cuerpo','parser.py',130),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',134),
]
