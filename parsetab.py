
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftMULTDIVMODAND ASIGNACION CADENA COMA DIF DIV ENTERO FOR ID IGUAL LBRACE LPAREN MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MOD MULT OR PUNTOYCOMA RBRACE REAL RPAREN TIPOprograma : declaraciones\n| declaraciones sentenciasdeclaraciones : declaraciones declaracion\n| declaraciondeclaracion : TIPO ID PUNTOYCOMAsentencias : sentencias sentencia\n| sentenciasentencia : asignacion\n| ciclo_forasignacion : ID ASIGNACION expresion PUNTOYCOMAexpresion : IDexpresion : CADENAexpresion : ENTEROexpresion : REALexpresion : expresion MAS expresion\n| expresion MENOS expresion\n| expresion MULT expresion\n| expresion DIV expresion\n| expresion MOD expresionciclo_for : FOR LPAREN asignacion PUNTOYCOMA expresion PUNTOYCOMA asignacion RPAREN LBRACE sentencias RBRACE'
    
_lr_action_items = {'TIPO':([0,2,3,6,16,],[4,4,-4,-3,-5,]),'$end':([1,2,3,5,6,7,9,10,13,16,23,41,],[0,-1,-4,-2,-3,-7,-8,-9,-6,-5,-10,-20,]),'ID':([2,3,4,5,6,7,9,10,13,14,15,16,23,24,25,26,27,28,29,36,39,40,41,],[8,-4,12,8,-3,-7,-8,-9,-6,17,8,-5,-10,17,17,17,17,17,17,8,8,8,-20,]),'FOR':([2,3,5,6,7,9,10,13,16,23,39,40,41,],[11,-4,11,-3,-7,-8,-9,-6,-5,-10,11,11,-20,]),'RBRACE':([7,9,10,13,23,40,41,],[-7,-8,-9,-6,-10,41,-20,]),'ASIGNACION':([8,],[14,]),'LPAREN':([11,],[15,]),'PUNTOYCOMA':([12,17,18,19,20,21,22,23,30,31,32,33,34,35,],[16,-11,23,-12,-13,-14,29,-10,-15,-16,-17,-18,-19,36,]),'CADENA':([14,24,25,26,27,28,29,],[19,19,19,19,19,19,19,]),'ENTERO':([14,24,25,26,27,28,29,],[20,20,20,20,20,20,20,]),'REAL':([14,24,25,26,27,28,29,],[21,21,21,21,21,21,21,]),'MAS':([17,18,19,20,21,30,31,32,33,34,35,],[-11,24,-12,-13,-14,-15,-16,-17,-18,-19,24,]),'MENOS':([17,18,19,20,21,30,31,32,33,34,35,],[-11,25,-12,-13,-14,-15,-16,-17,-18,-19,25,]),'MULT':([17,18,19,20,21,30,31,32,33,34,35,],[-11,26,-12,-13,-14,26,26,-17,-18,-19,26,]),'DIV':([17,18,19,20,21,30,31,32,33,34,35,],[-11,27,-12,-13,-14,27,27,-17,-18,-19,27,]),'MOD':([17,18,19,20,21,30,31,32,33,34,35,],[-11,28,-12,-13,-14,28,28,-17,-18,-19,28,]),'RPAREN':([23,37,],[-10,38,]),'LBRACE':([38,],[39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([0,],[2,]),'declaracion':([0,2,],[3,6,]),'sentencias':([2,39,],[5,40,]),'sentencia':([2,5,39,40,],[7,13,7,13,]),'asignacion':([2,5,15,36,39,40,],[9,9,22,37,9,9,]),'ciclo_for':([2,5,39,40,],[10,10,10,10,]),'expresion':([14,24,25,26,27,28,29,],[18,30,31,32,33,34,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaraciones','programa',1,'p_programa','parser.py',19),
  ('programa -> declaraciones sentencias','programa',2,'p_programa','parser.py',20),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','parser.py',24),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','parser.py',25),
  ('declaracion -> TIPO ID PUNTOYCOMA','declaracion',3,'p_declaracion','parser.py',29),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_sentencias','parser.py',40),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','parser.py',41),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','parser.py',45),
  ('sentencia -> ciclo_for','sentencia',1,'p_sentencia','parser.py',46),
  ('asignacion -> ID ASIGNACION expresion PUNTOYCOMA','asignacion',4,'p_asignacion','parser.py',50),
  ('expresion -> ID','expresion',1,'p_expresion_id','parser.py',69),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',78),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',82),
  ('expresion -> REAL','expresion',1,'p_expresion_real','parser.py',86),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','parser.py',90),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','parser.py',91),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_binaria','parser.py',92),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','parser.py',93),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binaria','parser.py',94),
  ('ciclo_for -> FOR LPAREN asignacion PUNTOYCOMA expresion PUNTOYCOMA asignacion RPAREN LBRACE sentencias RBRACE','ciclo_for',11,'p_ciclo_for','parser.py',106),
]
